<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<Version>$([System.DateTime]::Now.ToString("1.yy.MM.dd"))</Version>
		<Configurations>DEBUG_A;DEBUG_B;Debug;DEBUG_ALI;DEBUG_MUS;DEBUG_FAI;DEBUG_ZUB;DEBUG_AND;DEBUG_RAM;rDebug;Release;DEBUG_RAM_SOCIAL</Configurations>
		<GeneratePackageOnBuild>False</GeneratePackageOnBuild>
		<Description>TCP socket communication library with the server that has professional features such as maintenance of a spooler, verification of connection persistence, automatic restoration of the connection timed out, a ping system with the server, the ability to route messages to multiple recipients through a router. The library works perfectly on both server (iOS, Windows, Apple) and mobile (Android and iOS) platforms.</Description>
		<Copyright>Andrea Bruno</Copyright>
		<PackageProjectUrl>https://www.nuget.org/packages/CommunicationChannel/</PackageProjectUrl>
		<PackageTags>tcp, socket, spooler, connection, client server, data transfer, protocol</PackageTags>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_A|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_B|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_ALI|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_MUS|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_FAI|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_ZUB|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_AND|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_RAM_SOCIAL|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DEBUG_RAM|AnyCPU'">
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='rDebug|AnyCPU'">
		<DefineConstants>DEBUG;TRACE</DefineConstants>
	</PropertyGroup>

	<PropertyGroup>
		<GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);SetPackageVersion</GenerateNuspecDependsOn>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
		<RepositoryUrl>https://github.com/Andrea-Bruno/EncryptedMessaging/tree/master/CommunicationChannel</RepositoryUrl>
	</PropertyGroup>

	<Target Name="SetPackageVersion" DependsOnTargets="Build">
		<PropertyGroup>
			<!-- <PackageVersion>$([System.DateTime]::Now.ToString(&quot;yyyy.MM.dd.HHmmss&quot;))</PackageVersion> -->
			<!-- You can customize the format and the rule about how version increases here. -->
			<PackageVersion>$([System.DateTime]::Now.ToString("1.yy.MM.dd"))</PackageVersion>
		</PropertyGroup>
	</Target>

	<ItemGroup>
	  <ProjectReference Include="..\..\SecureStorage\SecureStorage.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <None Update="LICENSE.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	  <None Update="README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>

</Project>
